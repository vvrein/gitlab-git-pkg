commit 65881b44f782618d0bb5d37dead5deca8aafdf7a
Author: Anatol Pomozov <anatol.pomozov@gmail.com>
Date:   Tue May 26 00:01:38 2020 -0700

    Patch config files with Arch Linux specific locations
    
    Arch uses upstream's default config files as a base for its configs.
    But directory structure at Arch is completely different from the default
    one specified by gitlab project.
    We used to have a lot of seds expressions to adjust the files but as
    complexity of configs grew 'sed' makes it easy to miss a changed/added
    option.
    
    Track set of diffs as a patch. If upstream modifies config file then it
    will cause a conflict that needs to be reviewed manually.

diff --git a/config/database.yml.postgresql b/config/database.yml.postgresql
index 5b3b35c9226..afb139df97e 100644
--- a/config/database.yml.postgresql
+++ b/config/database.yml.postgresql
@@ -6,7 +6,7 @@ production:
   encoding: unicode
   database: gitlabhq_production
   pool: 10
-  username: git
+  username: gitlab
   password: "secure password"
   host: localhost
   # load_balancing:
@@ -39,7 +39,7 @@ staging:
   encoding: unicode
   database: gitlabhq_staging
   pool: 10
-  username: git
+  username: gitlab
   password: "secure password"
   host: localhost
 
diff --git a/config/gitlab.yml.example b/config/gitlab.yml.example
index 9a2e470f852..53d6a5e50eb 100644
--- a/config/gitlab.yml.example
+++ b/config/gitlab.yml.example
@@ -83,7 +83,7 @@ production: &base
       #- 2001:0db8::/32
 
     # Uncomment and customize if you can't use the default user to run GitLab (default: 'git')
-    # user: git
+    user: gitlab
 
     ## Date & Time settings
     # Uncomment and customize if you want to change the default time zone of GitLab application.
@@ -103,13 +103,13 @@ production: &base
       # enabled: false
       # S/MIME private key file in PEM format, unencrypted
       # Default is '.gitlab_smime_key' relative to Rails.root (i.e. root of the GitLab app).
-      # key_file: /home/git/gitlab/.gitlab_smime_key
+      # key_file: /var/lib/gitlab/.gitlab_smime_key
       # S/MIME public certificate key in PEM format, will be attached to signed messages
       # Default is '.gitlab_smime_cert' relative to Rails.root (i.e. root of the GitLab app).
-      # cert_file: /home/git/gitlab/.gitlab_smime_cert
+      # cert_file: /var/lib/gitlab/.gitlab_smime_cert
       # S/MIME extra CA public certificates in PEM format, will be attached to signed messages
       # Optional
-      # ca_certs_file: /home/git/gitlab/.gitlab_smime_ca_certs
+      # ca_certs_file: /var/lib/gitlab/.gitlab_smime_ca_certs
 
     # Email server smtp settings are in config/initializers/smtp_settings.rb.sample
 
@@ -363,7 +363,7 @@ production: &base
 
     # File that contains the shared secret key for verifying access for gitlab-pages.
     # Default is '.gitlab_pages_secret' relative to Rails.root (i.e. root of the GitLab app).
-    # secret_file: /home/git/gitlab/.gitlab_pages_secret
+    # secret_file: /var/lib/gitlab/.gitlab_pages_secret
 
   ## Mattermost
   ## For enabling Add to Mattermost button
@@ -546,7 +546,7 @@ production: &base
     # add_pusher: true
 
     # The location where build traces are stored (default: builds/). Relative paths are relative to Rails.root
-    # builds_path: builds/
+    builds_path: /var/lib/gitlab/builds/
 
   #
   # 3. Auth settings
@@ -956,12 +956,12 @@ production: &base
 
   # Shared file storage settings
   shared:
-    # path: /mnt/gitlab # Default: shared
+    path: /var/lib/gitlab/shared # Default: shared
 
   # Gitaly settings
   gitaly:
     # Path to the directory containing Gitaly client executables.
-    client_path: /home/git/gitaly
+    client_path: /usr/bin
     # Default Gitaly authentication token. Can be overridden per storage. Can
     # be left blank when Gitaly is running locally on a Unix socket, which
     # is the normal way to deploy Gitaly.
@@ -979,13 +979,13 @@ production: &base
     # real path not the symlink.
     storages: # You must have at least a `default` storage path.
       default:
-        path: /home/git/repositories/
-        gitaly_address: unix:/home/git/gitlab/tmp/sockets/private/gitaly.socket # TCP connections are supported too (e.g. tcp://host:port). TLS connections are also supported using the system certificate pool (eg: tls://host:port).
+        path: /var/lib/gitlab/repositories/
+        gitaly_address: unix:/run/gitlab/gitlab-gitaly.socket # TCP connections are supported too (e.g. tcp://host:port). TLS connections are also supported using the system certificate pool (eg: tls://host:port).
         # gitaly_token: 'special token' # Optional: override global gitaly.token for this storage.
 
   ## Backup settings
   backup:
-    path: "tmp/backups"   # Relative paths are relative to Rails.root (default: tmp/backups/)
+    path: "/var/lib/gitlab/backups"   # Relative paths are relative to Rails.root (default: tmp/backups/)
     # archive_permissions: 0640 # Permissions for the resulting backup.tar file (default: 0600)
     # keep_time: 604800   # default: 0 (forever) (in seconds)
     # pg_schema: public     # default: nil, it means that all schemas will be backed up
@@ -1026,12 +1026,12 @@ production: &base
 
   ## GitLab Shell settings
   gitlab_shell:
-    path: /home/git/gitlab-shell/
-    authorized_keys_file: /home/git/.ssh/authorized_keys
+    path: /usr/share/webapps/gitlab-shell/
+    authorized_keys_file: /var/lib/gitlab/.ssh/authorized_keys
 
     # File that contains the secret key for verifying access for gitlab-shell.
     # Default is '.gitlab_shell_secret' relative to Rails.root (i.e. root of the GitLab app).
-    # secret_file: /home/git/gitlab/.gitlab_shell_secret
+    # secret_file: /var/lib/gitlab/.gitlab_shell_secret
 
     # Git over HTTP
     upload_pack: true
@@ -1046,11 +1046,11 @@ production: &base
   workhorse:
     # File that contains the secret key for verifying access for gitlab-workhorse.
     # Default is '.gitlab_workhorse_secret' relative to Rails.root (i.e. root of the GitLab app).
-    # secret_file: /home/git/gitlab/.gitlab_workhorse_secret
+    # secret_file: /var/lib/gitlab/.gitlab_workhorse_secret
 
   ## GitLab Elasticsearch settings
   elasticsearch:
-    indexer_path: /home/git/gitlab-elasticsearch-indexer/
+    indexer_path: /var/lib/gitlab/elasticsearch-indexer/
 
   ## Git settings
   # CAUTION!
diff --git a/config/puma.rb.example b/config/puma.rb.example
index cd7adca157f..9dffc101ae5 100644
--- a/config/puma.rb.example
+++ b/config/puma.rb.example
@@ -5,11 +5,11 @@
 # The default is "config.ru".
 #
 rackup 'config.ru'
-pidfile '/home/git/gitlab/tmp/pids/puma.pid'
-state_path '/home/git/gitlab/tmp/pids/puma.state'
+pidfile '/run/gitlab/puma.pid'
+state_path '/run/gitlab/puma.state'
 
-stdout_redirect '/home/git/gitlab/log/puma.stdout.log',
-  '/home/git/gitlab/log/puma.stderr.log',
+stdout_redirect '/var/log/gitlab/puma.stdout.log',
+  '/var/log/gitlab/puma.stderr.log',
   true
 
 # Configure "min" to be the minimum number of threads to use to answer
@@ -31,12 +31,12 @@ queue_requests false
 
 # Bind the server to "url". "tcp://", "unix://" and "ssl://" are the only
 # accepted protocols.
-bind 'unix:///home/git/gitlab/tmp/sockets/gitlab.socket'
+bind 'unix:///run/gitlab/gitlab.socket'
 
 workers 3
 
-require_relative "/home/git/gitlab/lib/gitlab/cluster/lifecycle_events"
-require_relative "/home/git/gitlab/lib/gitlab/cluster/puma_worker_killer_initializer"
+require_relative "/usr/share/webapps/gitlab/lib/gitlab/cluster/lifecycle_events"
+require_relative "/usr/share/webapps/gitlab/lib/gitlab/cluster/puma_worker_killer_initializer"
 
 on_restart do
   # Signal application hooks that we're about to restart
@@ -70,7 +70,7 @@ tag 'gitlab-puma-worker'
 worker_timeout 60
 
 # Use json formatter
-require_relative "/home/git/gitlab/lib/gitlab/puma_logging/json_formatter"
+require_relative "/usr/share/webapps/gitlab/lib/gitlab/puma_logging/json_formatter"
 
 json_formatter = Gitlab::PumaLogging::JSONFormatter.new
 log_formatter do |str|
